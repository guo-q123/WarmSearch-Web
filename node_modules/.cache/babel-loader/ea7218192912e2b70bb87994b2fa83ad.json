{"remainingRequest":"D:\\all_project\\WarmSearch-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\all_project\\WarmSearch-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\all_project\\WarmSearch-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\all_project\\WarmSearch-Web\\src\\components\\LangSelect\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\all_project\\WarmSearch-Web\\src\\components\\LangSelect\\index.vue","mtime":1646550223740},{"path":"D:\\all_project\\WarmSearch-Web\\babel.config.js","mtime":1646550223702},{"path":"D:\\all_project\\WarmSearch-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646550504247},{"path":"D:\\all_project\\WarmSearch-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":1646550504177},{"path":"D:\\all_project\\WarmSearch-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646550504247},{"path":"D:\\all_project\\WarmSearch-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":1646550502645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBsYW5ndWFnZTogZnVuY3Rpb24gbGFuZ3VhZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmxhbmd1YWdlOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU2V0TGFuZ3VhZ2U6IGZ1bmN0aW9uIGhhbmRsZVNldExhbmd1YWdlKGxhbmcpIHsKICAgICAgdGhpcy4kaTE4bi5sb2NhbGUgPSBsYW5nOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYXBwL3NldExhbmd1YWdlJywgbGFuZyk7CiAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIG1lc3NhZ2U6ICdTd2l0Y2ggTGFuZ3VhZ2UgU3VjY2VzcycsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA;AACAA;AACAC,YADA,sBACA;AACA;AACA;AAHA,GADA;AAMAC;AACAC,qBADA,6BACAC,IADA,EACA;AACA;AACA;AACA;AACAC,0CADA;AAEAC;AAFA;AAIA;AARA;AANA","names":["computed","language","methods","handleSetLanguage","lang","message","type"],"sourceRoot":"src/components/LangSelect","sources":["index.vue"],"sourcesContent":["<template>\n  <el-dropdown trigger=\"click\" class=\"international\" @command=\"handleSetLanguage\">\n    <div>\n      <svg-icon class-name=\"international-icon\" icon-class=\"language\" />\n    </div>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item :disabled=\"language==='zh'\" command=\"zh\">\n        中文\n      </el-dropdown-item>\n      <el-dropdown-item :disabled=\"language==='en'\" command=\"en\">\n        English\n      </el-dropdown-item>\n      <el-dropdown-item :disabled=\"language==='es'\" command=\"es\">\n        Español\n      </el-dropdown-item>\n      <el-dropdown-item :disabled=\"language==='ja'\" command=\"ja\">\n        日本語\n      </el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script>\nexport default {\n  computed: {\n    language() {\n      return this.$store.getters.language\n    }\n  },\n  methods: {\n    handleSetLanguage(lang) {\n      this.$i18n.locale = lang\n      this.$store.dispatch('app/setLanguage', lang)\n      this.$message({\n        message: 'Switch Language Success',\n        type: 'success'\n      })\n    }\n  }\n}\n</script>\n"]}]}